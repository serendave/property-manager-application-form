/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SummaryImport } from './routes/summary'
import { Route as PersonalImport } from './routes/personal'
import { Route as LegalImport } from './routes/legal'
import { Route as ContactImport } from './routes/contact'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SummaryRoute = SummaryImport.update({
  path: '/summary',
  getParentRoute: () => rootRoute,
} as any)

const PersonalRoute = PersonalImport.update({
  path: '/personal',
  getParentRoute: () => rootRoute,
} as any)

const LegalRoute = LegalImport.update({
  path: '/legal',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/legal': {
      id: '/legal'
      path: '/legal'
      fullPath: '/legal'
      preLoaderRoute: typeof LegalImport
      parentRoute: typeof rootRoute
    }
    '/personal': {
      id: '/personal'
      path: '/personal'
      fullPath: '/personal'
      preLoaderRoute: typeof PersonalImport
      parentRoute: typeof rootRoute
    }
    '/summary': {
      id: '/summary'
      path: '/summary'
      fullPath: '/summary'
      preLoaderRoute: typeof SummaryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ContactRoute,
  LegalRoute,
  PersonalRoute,
  SummaryRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contact",
        "/legal",
        "/personal",
        "/summary"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/legal": {
      "filePath": "legal.tsx"
    },
    "/personal": {
      "filePath": "personal.tsx"
    },
    "/summary": {
      "filePath": "summary.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
